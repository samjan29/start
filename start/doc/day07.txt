#day07

배열

	배열에 데이터를 기억시키는 방법
		
		배열 변수[위치값(index)] = 데이터;
		
	배열의 내용을 확인하는 방법
		==> 원칙은 하나씩 꺼내서 확인하는 것이 원칙
			내용확인용도로만 사용할 예정이라면
				Arrays.toString(배열변수);
			주의 ]
				이때 절대로 데이터를 사용할 용도로 이 함수를 호출하면 안된다.
				
		
------------------------------------------------------------------------------------------------------------------

배열 정리
	
	같은 형태의 데이터를 여러개 모아서 한꺼번에 관리하는 방식
	데이터가 많은 경우 원칙적으로 데이터 갯수만큼 변수를 만들어야 한다.
	따라서 변수를 만들때도 불편하고 그 데이터를 사용할 때도 불편하다.
	이런 문제를 해결하기 위한 방법으로 제시된 것이 배열이다.
	
	즉, 배열이란 하나의 변수를 이용해서 여러개의 데이터를 관리할 수 있도록 하는 것.
	
	참고 ]
		자바의 변수의 형태는
			1. 기본형 변수(Primitive Type, Value 형태)
				==> 자바에서 제공하는 기본 데이터타입으로 만드는 변수
					기본 데이터타입은 boolean, char, byte, short, int, long, float, double으로 8가지
				
			2. 참조형 변수(Reference Type)
				==> 기본 데이터타입 이외의 모든 변수
				
	참고 ]
		Heap 영역
			특징
				1. 반드시 주소를 알아야 사용할 수 있는 영역
				2. 8가지 영역 중에서 크기가 가장 큰 영역	확장 가능하다.(부족하면 스스로가 다른 영역을 빼앗아서 Heap 영역으로 사용할 수 있다.)
					==> 따라서 자바에서 많은 양의 데이터를 필요로 하면 이것은 Heap 영역에 기억하도록 되어있다.


=================================================================================================================

배열 만드는 방법
	
	1. 배열은 원칙적으로 데이터가 기억될 공간을 Heap에 만들어야 한다.
	
	
		명령 ]
			new 데이터타입[갯수];
			
				데이터타입 : Heap에 만든 데이터 영역의 형태를 지정
								관리할 데이터들의 타입
				갯수	   : Heap에 만들 데이터 영역의 갯수 지정
								관리할 데이터가 몇개인지..
								
		예 ]
			new int[10];
			==> Heap 영역에 int 데이터들을 기억할 메모리 공간을 10개 만드세요.
			
		*****
		참고 ]
			new 명령
				1. Heap에 뭔가를 만들겠습니다.
				2. 주소는 알려드리겠습니다.
				
	2. Heap에 있는 메모리의 주소를 기억할 변수를 만들어야 한다.
	
		명령어 ]
			데이터타입[] 변수이름;
			
			참고 ]
				데이터타입[] 자신이 관리할 Heap 영역에 있는 실제데이터 형태에 따라서 달라진다.
				==> Heap Type(= Heap에 저장되는 데이터의 데이터타입) 라고 부른다.
				
			주의 ]
				Heap Type이 같은 주소만 기억한다.
				
				int[] no;
				no = 10;	---> X
			
		예 ]
			int[] num;
			==> 정수 여러개를 관리할 배열을 기억할 변수 선언
			
			
		주의 ]
			int[] num = new float[5];	==> Heap Type이 다르기 때문에 안된다.
			
			int[] num = new int[5];		---> O
			
			
	정리 ]
		1. 만들 배열이 Heap에 생길 때 그 주소를 기억할 변수를 준비
		2. Heap에 필요한 메모리를 만들고 그 주소를 준비한 변수에 기억시킨다. 
			
			
배열 사용방법

	명령어 ]
		변수[위치값];
		
		참고 ]
			위치값은 0부터 시작한다.(index)
			
	참고 ]
		배열주소.length		==> 배열주소(변수)가 관리하는 곳에 있는 메모리의 갯수를 알려주는 명령
		
----------------------------------------------------------------------------------------------------------------------

참고 ]
	배열의 초기화
	==> 배열 메모리는 Heap에 생기므로 자동으로 초기화가 이루어진다.
			정수 0
			실수 0.0
			논리	false
			문자	ASCIIcode 0
		경우에 따라서는 배열 메모리에 강제로 특정값을 입력할 필요도 있다.
		==> 이것을 "배열의 초기화"라고 한다.				
		
		형식 1 ]
			int[] num = {1, 2, 3, 4, 5};
			
		형식 2 ]
			int[] num = new int[]{1, 2, 3, 4, 5};
			
		
		***
		주의 ]
			배열을 초기화 할 경우에는 배열이 크기를 입력하면 안된다.
			대신 초기화 데이터를 이용해서 자동으로 배열의 크기가 결정된다.
			
			
	참고 ]		Camel표기법
		Arrays.toString() 함수
		==> 배열을 출력하기 위해서는 반복명령을 이용해서 출력하는 것이 원칙이다.
			하지만 단순히 배열의 내용만 확인하는 차원에서는 for 반복문을 이용하는 것이 불편하다.
			==> 배열에 있는 데이터를 출력하기 위한 명령으로 배열이 가진 모든 데이터를 문자열로 변환해서 반환해주는 기능을 가진 함수
			
			
		주의 ]
			오직 배열의 내용 확인용도로만 사용해야 한다. 배열이 비어있는지 아닌지,
			